#!/usr/bin/env ruby
require 'rubygems'
require 'jruby-jars'
require 'optparse'
require 'ostruct'
require 'cgi'

require File.join(File.dirname(__FILE__), '..', 'lib', 'jmapreduce', 'runner')

options = OpenStruct.new

OptionParser.new do |opts|
  opts.banner = "USAGE: jmapreduce script input output [options]"

  opts.on("-c", "--conf HADOOP_CONF", "Use this cluster xml config file") do |config|
    options.config = config
  end
  
  opts.on("-n", "--namenode namenode:port", "Specify a namenode") do |namenode|
    options.namenode = namenode
  end
  
  opts.on("-t", "--jobtracker jobtracker:port", "Specify a job tracker") do |jobtracker|
    options.jobtracker = jobtracker
  end
  
  opts.on("-l", "--libjars jar files", "comma-separated jar files to include in the classpath") do |libjars|
    options.libjars = libjars
  end
  
  opts.on("-f", "--files files", "comma separated files to be copied to the map reduce cluster") do |files|
    options.files = files
  end
  
  opts.on("-v", '--variables name=value', "Pass additional parameters to jobs") do |config|
    options.properties = config
  end
  
  opts.on("-j", '--json {"key":"1 value"}', "Pass JSON encoded parameters to jobs") do |config|
    options.properties = "json=#{CGI.escape(config)}"
  end
  
  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end
end.parse!

Runner.new(ARGV[0], ARGV[1], ARGV[2], 
  :conf => options.config, 
  :namenode => options.namenode,
  :jobtracker => options.jobtracker,
  :properties => options.properties, 
  :libjars => options.libjars,
  :files => options.files).run
  